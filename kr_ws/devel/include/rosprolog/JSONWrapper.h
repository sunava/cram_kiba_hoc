// Generated by gencpp from file rosprolog/JSONWrapper.msg
// DO NOT EDIT!


#ifndef ROSPROLOG_MESSAGE_JSONWRAPPER_H
#define ROSPROLOG_MESSAGE_JSONWRAPPER_H

#include <ros/service_traits.h>


#include <rosprolog/JSONWrapperRequest.h>
#include <rosprolog/JSONWrapperResponse.h>


namespace rosprolog
{

struct JSONWrapper
{

typedef JSONWrapperRequest Request;
typedef JSONWrapperResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct JSONWrapper
} // namespace rosprolog


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rosprolog::JSONWrapper > {
  static const char* value()
  {
    return "711a21c0da0464ac74bbc6e6331ef069";
  }

  static const char* value(const ::rosprolog::JSONWrapper&) { return value(); }
};

template<>
struct DataType< ::rosprolog::JSONWrapper > {
  static const char* value()
  {
    return "rosprolog/JSONWrapper";
  }

  static const char* value(const ::rosprolog::JSONWrapper&) { return value(); }
};


// service_traits::MD5Sum< ::rosprolog::JSONWrapperRequest> should match
// service_traits::MD5Sum< ::rosprolog::JSONWrapper >
template<>
struct MD5Sum< ::rosprolog::JSONWrapperRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rosprolog::JSONWrapper >::value();
  }
  static const char* value(const ::rosprolog::JSONWrapperRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosprolog::JSONWrapperRequest> should match
// service_traits::DataType< ::rosprolog::JSONWrapper >
template<>
struct DataType< ::rosprolog::JSONWrapperRequest>
{
  static const char* value()
  {
    return DataType< ::rosprolog::JSONWrapper >::value();
  }
  static const char* value(const ::rosprolog::JSONWrapperRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rosprolog::JSONWrapperResponse> should match
// service_traits::MD5Sum< ::rosprolog::JSONWrapper >
template<>
struct MD5Sum< ::rosprolog::JSONWrapperResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rosprolog::JSONWrapper >::value();
  }
  static const char* value(const ::rosprolog::JSONWrapperResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rosprolog::JSONWrapperResponse> should match
// service_traits::DataType< ::rosprolog::JSONWrapper >
template<>
struct DataType< ::rosprolog::JSONWrapperResponse>
{
  static const char* value()
  {
    return DataType< ::rosprolog::JSONWrapper >::value();
  }
  static const char* value(const ::rosprolog::JSONWrapperResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROSPROLOG_MESSAGE_JSONWRAPPER_H
